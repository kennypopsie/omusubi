<%= csrf_meta_tags %>


<script>
// 要素の指定
const hrefLink = document.querySelectorAll('.linkList li a');
window.addEventListener("DOMContentLoaded", () => {
// 指定した要素全てにイベントハンドラを追加
  for (i = 0; i < hrefLink.length; i++) {
const gtagLink = "window.onbeforeunload = null;"
hrefLink[i].setAttribute('onclick', gtagLink);
}
});

// ページ離脱時の確認メッセージ
window.onbeforeunload = function(e) {
      e.returnValue = "ページを離れようとしています。よろしいですか？";
    }




// window.addEventListener('beforeunload', (event) => {
//   console.log(event);
//   event.returnValue = '';
// });

</script>

<script>
document.addEventListener("DOMContentLoaded", function () {
  const timerElement = document.getElementById("timer");
  const startButton = document.getElementById("startButton");
  const stopButton = document.getElementById("stopButton");
  
  let startTime = 0;
  let timerInterval;

  function updateTimer() {
    const currentTime = new Date().getTime();
    const elapsedTime = currentTime - startTime;
    const hours = Math.floor(elapsedTime / 3600000);
    const minutes = Math.floor((elapsedTime % 3600000) / 60000);
    const seconds = Math.floor((elapsedTime % 60000) / 1000);

    timerElement.textContent = `${String(hours).padStart(2, "0")}:${String(
      minutes
    ).padStart(2, "0")}:${String(seconds).padStart(2, "0")}`;
  }

  startButton.addEventListener("click", function () {
    startTime = new Date().getTime();
    timerInterval = setInterval(updateTimer, 1000); // 1秒ごとに更新
  });

  stopButton.addEventListener("click", function () {
    clearInterval(timerInterval);
    timerElement.textContent = "00:00:00";
    startTime = 0; // タイマーをリセット

  });
});


// document.addEventListener("DOMContentLoaded", function () {
//   const timerElement = document.getElementById("timer");
//   const stopButton = document.getElementById("stopButton");
//   const queryParams = new URLSearchParams(window.location.search);
//   const startParam = queryParams.get("start");

//   let startTime = 0;
//   let timerInterval;

//   function updateTimer() {
//     const currentTime = new Date().getTime();
//     const elapsedTime = currentTime - startTime;
//     const hours = Math.floor(elapsedTime / 3600000);
//     const minutes = Math.floor((elapsedTime % 3600000) / 60000);
//     const seconds = Math.floor((elapsedTime % 60000) / 1000);

//     timerElement.textContent = `${String(hours).padStart(2, "0")}:${String(
//       minutes
//     ).padStart(2, "0")}:${String(seconds).padStart(2, "0")}`;
//   }

//   if (startParam === "true") {
//     startTime = new Date().getTime();
//     timerInterval = setInterval(updateTimer, 1000); // 1秒ごとに更新
//   }

//   stopButton.addEventListener("click", function () {
//     clearInterval(timerInterval);
//     timerElement.textContent = "00:00:00";
//     startTime = 0; // タイマーをリセット
//   });
// });
</script>




 <div class="device-container">

  <div class="form-container">


          
          <h1>学習中</h1>
          

    <div class="study-end">
      <%= link_to '学習終了', study_path(@study), method: :patch, class: "btn btn-danger" %>
    </div>

    <div class="study-break">
      <%= link_to '休憩', method: :post,  class: "btn btn-danger" %>
    </div>
    <div id="timer">00:00:00</div>
    
    <!-- 学習開始ボタン -->
    <button id="startButton">学習開始</button>
    
    <!-- 学習終了ボタン -->
    <button id="stopButton">学習終了</button>
　</div>
</div>


